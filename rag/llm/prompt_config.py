

rag_base_prompt = """接下来我将提供一份参考信息和一个问题，
请根据我提供的参考信息回答我的问题或回复我的指令。前面的参考信息可能有用，也可能没用。
你需要辨别确认，从我给出的参考信息中选出与我的问题最相关的那些，来为你的回答提供依据。回答一定要忠于原文，简洁但不丢信息，不要胡乱编造。我的问题或指令是什么语种，你就用什么语种回复,
# 参考信息：
{message}
# 我的问题或指令:
{question}
# 你的回复："""


# 简单版-问题重写
query_rewritten_prompt = """你是一个非常有用的助手，你的任务是对给定的问题进行重写，以使其更准确或更具体。
# 原始问题：{question}
# 重写后的问题
"""

# 问题分解
query_split_prompt = """你是一个非常有用的助手，你的任务是对给定的问题进行分解为多个问题并重写，以使其更准确或更具体。
分解后的问题用序号1.2.等顺序标记，并用换行符作为问题之间的分隔符，（问题内部禁止使用换行符)
禁止回复任何多余的内容
# 原始问题：{question}
# 重写后的问题
"""

# 指代消除
coreference_resolution_prompt = """你是一个语言理解助手，这里有一条参考资料，以及一个问题。
问题中可能存在不够具体的指代词，这些词可能与提供的参考资料有关，如果请你进行指代消除，重写这个问题并回答。
如果不存在指代词，则直接返回给我原问题即可。
注意：我的问题是什么语种，你就用什么语种回复，并禁止你回复多余的内容。
# 参考资料：
{qa}
# 额外的问题：
{question}
# 重写后的问题：
"""

# 带指向性的rag生成
rag_with_reason_prompt = """接下来我将提供一份参考信息和一个问题，参考信息将会以编号形式逐条提供。
请根据我提供的参考信息回答我的问题或回复我的指令。前面的参考信息可能有用，也可能没用，你需要辨别确认。
如果某条参考信息有用，能为你的回答提供依据，要在回答后添加[序号]作为标记，如果有多条参考就添加多个标记（除此之外禁止使用[]符号）。
# 参考回复样例：公元0年的中国处于西汉时期[0][1]
注意：回答一定要忠于原文，简洁但不丢信息，不要胡乱编造。我的问题或指令是什么语种，你就用什么语种回复。
# 参考信息：
{message}
# 我的问题或指令:
{question}
# 你的回复"""

# 最终问答总结
qa_chain_summary_prompt = """你是一个总结小助手，这里有一个问题以及一些相关信息，
目前对问题进行了分解和逐步的回答，现在你需要对答案进行总结，并给问题的最终答案。
如果你的最终回答参考了参考信息中的某条内容，那么就在对应的回答后面加上[编号]作为引用标志。
注意：我的问题是什么语种，你就用什么语种回复。
# 问题：
{question}
# 参考信息：
{message}
# 逐步回答：
{qa}
# 最终回答：
"""



if __name__ == '__main__':
    import re

    text = "本赛季英超金靴的年龄是24岁[可以这样吗][1][2]。"

    # 提取文本中不含方括号的部分
    text_without_brackets = re.sub(r'\[\d+]', '', text)

    # 提取方括号内的数字
    numbers_in_brackets = re.findall(r'\[\d+]', text)
    numbers_only = [int(num.strip('[]')) for num in numbers_in_brackets]

    # 打印结果
    print("Text without brackets:", text_without_brackets.strip())
    print("Numbers in brackets:", numbers_only)